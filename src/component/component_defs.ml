open Ecs

module Position = Component.Make(struct include Vector let name = "position" end)
module Velocity = Component.Make(struct include Vector let name = "velocity" end)
module Mass = Component.Make (struct type t = float let name = "mass" end)
module Box = Component.Make(struct include Rect let name = "box" end)
module Surface = Component.Make (struct include Texture let name = "texture" end)
module Name = Component.Make(struct type t = string let name = "name" end)
module CollisionResolver = Component.Make(struct type t = Entity.t -> Entity.t -> unit let name = "resolver" end)
module Owner = Component.Make(struct type t = Entity.t let name = "owner" end)
module Life = Component.Make (struct type t = int let name = "life" end)
module Invincibility = Component.Make (struct type t = float let name = "invincibility" end)
module Movement = Component.Make (struct include Direction let name = "movement" end)
module Speed = Component.Make (struct type t = float let name = "speed" end)
module Destroyer = Component.Make(struct type t = Entity.t -> unit let name = "destroyer" end)
module Image1 = Component.Make(struct type t = Gfx.image let name = "image1" end)
module Image2 = Component.Make(struct type t = Gfx.image let name = "image2" end)
module TimeSpawn = Component.Make(struct type t = float let name = "timespawn" end)
module Vert = Component.Make(struct type t = float let name = "vert" end)
module X_case = Component.Make(struct type t = int let name = "x_case" end)
module Y_case = Component.Make(struct type t = int let name = "y_case" end)